{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFecthGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","trim","length","categories","preventDefault","type","value","onChange","val","target","getGifs","category","a","q","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","GifGrid","loading","state","setstate","useEffect","then","imgs","useFecthGifs","key","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EACNC,mBAAS,sBADH,mBACnCC,EADmC,KACvBC,EADuB,KAe1C,OACI,0BAAMC,SATU,SAACC,GAEdH,EAAWI,OAAOC,OAAS,IAC1BP,GAAc,SAACQ,GAAD,OAAiBN,EAAWI,QAA5B,mBAAsCE,OACpDL,EAAc,KAElBE,EAAEI,mBAIE,4CACA,2BACIC,KAAK,OACLC,MAAOT,EACPU,SAnBW,SAACP,GACpB,IAAMQ,EAAMR,EAAES,OAAOH,MACrBR,EAAcU,Q,uBCNTE,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACbC,EAAIF,EACM,mCACVG,EAHa,uDAEH,mCAFG,cAGsDC,UAAUF,GAHhE,sBAIAG,MAAMF,GAJN,cAIbG,EAJa,gBAKCA,EAAKC,OALN,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAQF,EAAIE,MACZV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCGPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAKf,IACV,yBAAKc,UAAU,UAAUJ,KCDxBM,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJX,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAYtC,OANAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OAAQH,EAAS,CACpCd,KAAMiB,EACNL,SAAQ,SAEX,CAACpB,IACGqB,EDPuBK,CAAa1B,GAA/Bc,EADuB,EAC5BN,KAAYY,EADgB,EAChBA,QAOnB,OACI,oCACI,4BAAKpB,GACJoB,GAAW,0CACZ,yBAAKH,UAAU,4BACRH,EAAOJ,KAAK,SAAAC,GAAG,OACV,wBAAIgB,IAAOhB,EAAIC,IACX,kBAAC,EAAgBD,UEd/BiB,EAAgB,WAAM,MAEI3C,mBAAS,CAAC,KAFd,mBAEzBO,EAFyB,KAEbR,EAFa,KAOhC,OACI,oCACI,+CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAESQ,EAAWkB,KAAK,SAAAV,GAAQ,OACrB,kBAAC,EAAD,CAASA,SAAUA,EAAU2B,IAAK3B,U,MClB1D6B,IAASC,OACL,kBAAC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.a2ef66d8.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories})=>{\r\n    const [inputValue, setinputValue] = useState('Introduce un valor')\r\n    const handleOnChange = (e) => {\r\n        const val = e.target.value;\r\n        setinputValue(val);\r\n        \r\n    }\r\n    const handleSubmit =(e)  =>{\r\n        // setCategories([...categories,inputValue]);\r\n        if(inputValue.trim().length > 0){\r\n            setCategories((categories) => [inputValue.trim(),...categories]);\r\n            setinputValue('');\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add category</h2>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleOnChange}\r\n            />\r\n        </form>\r\n    );\r\n\r\n}\r\nAddCategory.propTypes={\r\n    setCategories : PropTypes.func.isRequired,\r\n    // categories : PropTypes.array.isRequired\r\n}\r\n","export const getGifs = async (category) =>{\r\n    const q = category;\r\n    const api_key = 'ZJrc2dJqCaUAMgHELpR3Tn0YpaAj9DgO';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${encodeURI(q)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} =await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title : img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n   return  gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className='Card'>\r\n            <img src={url} ></img>\r\n            <div className=\"Footer\">{title}</div>\r\n        </div>\r\n    )\r\n}\r\nGifGridItem.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    url:PropTypes.string.isRequired\r\n}\r\n","//import React,{useState,useEffect} from 'react'//rafc\r\nimport React from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFecthGifs } from '../hooks/useFecthGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images,loading} = useFecthGifs(category);\r\n\r\n    //el segundo parametro no tiene dependencias por lo tanto solo se ejecuta 1 vz\r\n    // useEffect(()=>{\r\n    //    getGifs(category).then(setimages);\r\n    // },[category]);\r\n    // const [images, setimages] = useState([]);\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Cargando...</p>}\r\n            <div className=\"Card-grid animate__jello\">\r\n                {  images.map( img => (\r\n                        <li key = {img.id}>\r\n                            <GifGridItem {...img}></GifGridItem>\r\n                        </li>\r\n                    )\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFecthGifs = (category) => {\r\n   \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n      getGifs(category).then((imgs)=>setstate({\r\n          data: imgs,\r\n          loading:false\r\n      }));\r\n    }, [category]);\r\n    return state;\r\n}","import React,{useState} from 'react'\r\n\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const  GiftExpertApp = () => {\r\n   // const categories = ['Goku','Samurai X','MegaMan'];\r\n    const [categories, setCategories] = useState(['']);\r\n    // const handleAdd =()=>{\r\n    //         const newCategory= 'Xmen';\r\n    //         setCategories([...categories,newCategory]);\r\n    // }\r\n    return(\r\n        <>\r\n            <h2>Gift Expert App</h2>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n            <hr></hr>\r\n           \r\n            <ol>\r\n                {\r\n                     categories.map( category => \r\n                        <GifGrid category={category} key={category} ></GifGrid>\r\n                     )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n     document.getElementById('root')\n);\n"],"sourceRoot":""}